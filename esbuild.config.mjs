import esbuild from "esbuild";
import process from "process";
// import builtins from "builtin-modules";
import sveltePlugin from "esbuild-svelte";
import sveltePreprocess from "svelte-preprocess";
import inlineWorkerPlugin from "esbuild-plugin-inline-worker";

import path from "path";
import stdlibBrowserPlugin from "node-stdlib-browser/helpers/esbuild/plugin";
import stdLibBrowser from "node-stdlib-browser";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === "production";

esbuild
	.build({
		banner: {
			js: banner,
		},
		entryPoints: ["src/main.ts"],
		bundle: true,

		external: [
			"obsidian",
			"electron",
			"codemirror",
			"@codemirror/autocomplete",
			"@codemirror/closebrackets",
			"@codemirror/commands",
			"@codemirror/fold",
			"@codemirror/gutter",
			"@codemirror/history",
			"@codemirror/language",
			"@codemirror/rangeset",
			"@codemirror/rectangular-selection",
			"@codemirror/search",
			"@codemirror/state",
			"@codemirror/stream-parser",
			"@codemirror/text",
			"@codemirror/view",
			// ...builtins,
		],
		format: "cjs",
		watch: !prod,
		target: "es2021",
		platform: "browser",
		logLevel: "info",
		sourcemap: prod ? false : "inline",
		treeShaking: true,
		outfile: "main.js",
		inject: ["node_modules/node-stdlib-browser/helpers/esbuild/shim.js"],
		define: {
			global: "global",
			process: "process",
			Buffer: "Buffer",
		},
		plugins: [
			sveltePlugin({
				compilerOptions: { css: true },
				preprocess: sveltePreprocess(),
			}),
			stdlibBrowserPlugin(stdLibBrowser),
			inlineWorkerPlugin({
				minify: false,
				platform: "browser",
			}),
		],
	})
	.catch(() => process.exit(1));
